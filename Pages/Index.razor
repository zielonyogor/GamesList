@page "/"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using GamesList

<nav class="navbar bg-body-tertiary">
     <div class="container-fluid align-items-stretch p-0">
        <a class="h2 ms-2 pixel-text" href="/">MY GAMES LIST</a>
        <form class="d-flex" role="search">
            <button class="btn btn-outline-success" type="submit">Search</button>
            <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
        </form>
        <a href="addgame" class="btn btn-outline-success" >Add</a>
    </div>
</nav>


<div class="main grid m-3">
    <div class="row">
        <div class="col-4 ms-5">
            @foreach(var game in Games)
            {
                <div class="card my-4">
                    <button class="game-card-button p-0 d-flex align-items-center text-start" @onclick="@(e => ChangeShownGame(@game.Title))">
                        <img src="@game.ImageUri" width="100px" height="100px">
                        <span class="h3 ms-4">@game.Title</span>
                    </button>
                </div>
            }
        </div>
        <div class="col-4 offset-2 position-static">
            @if(ShownGame is not null)
            {
                <div class="card">
                    <div class="card-title h3 d-flex">
                        <span class="flex-grow-1 m-2">@ShownGame.Title</span>
                        @* change to icons here *@
                        <button class="btn btn-outline-success align-self-stretch px-4" @onclick="@DeleteGame">X</button>
                        <a href="edit/@ShownGame.Id" class="btn btn-outline-success px-4">I</a>
                    </div>
                    <div class="card-body">
                        <div class="row my-3">
                            <div class="col-3 data-label">
                                Rating:
                            </div>
                            <div class="col-9 fs-5">
                                @(ShownGame.Rating)/10
                            </div>
                        </div>
                        <div class="row my-3">
                            <div class="col-3 data-label">
                                Release date:
                            </div>
                            <div class="col-9 fs-5">
                                @ShownGame.ReleaseTime.ToShortDateString()
                            </div>
                        </div>
                        <div class="row my-3">
                            <div class="col-3 data-label">
                                Playing since:
                            </div>
                            <div class="col-9 fs-5">
                                @ShownGame.ReleaseTime.ToShortDateString()
                            </div>
                        </div>
                        <div class="row my-3">
                            <div class="col-3 data-label">
                                Tags:
                            </div>
                            <div class="col-9 fs-5">
                                @for (int i = 0; i < ShownGame.Tags.Count; i++)
                                {
                                    <span>@ShownGame.Tags[i]@(i < ShownGame.Tags.Count - 1 ? ", " : "")</span>
                                }
                            </div>
                        </div>
                        <div class="row my-3">
                            <div class="col-3 data-label">
                                Desc:
                            </div>
                            <div class="col-9 fs-5">
                                @ShownGame.Description
                            </div>
                        </div>

                        <button class="btn btn-primary float-end">OK</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    List<GameDto> Games = new List<GameDto>();
    public GameDto ShownGame; 

    protected override async Task OnInitializedAsync()
    {
        Games = await HttpClient.GetFromJsonAsync<List<GameDto>>(NavigationManager.BaseUri + "api/games") ?? Games;
    } 

    public void ChangeShownGame(string gameTitle)
    {
        ShownGame = Games.Find(g => g.Title == gameTitle);
    }

    public async void DeleteGame()
    {
        Console.WriteLine("click");
        if(ShownGame is null)
        {
            return;
        }
        string id = ShownGame.Id.ToString();
        var requestUri = new Uri(new Uri(NavigationManager.BaseUri), $"api/games/{id}");
        using HttpResponseMessage response = await HttpClient.DeleteAsync(requestUri);
        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Deleted successfully");
            NavigationManager.Refresh();
        }
        else
        {
            Console.WriteLine("somethings wrong");
            NavigationManager.Refresh();
        }
    }
}